<UserControl x:Class="Wu.CommTool.Modules.MrtuSlave.Views.MrtuSlaveView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:core="Wu.CommTool.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dvm="clr-namespace:Wu.CommTool.Modules.MrtuSlave.ViewModels.DesignViewModels"
             xmlns:enums="clr-namespace:Wu.CommTool.Modules.MrtuSlave.Enums"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Wu.CommTool.Modules.MrtuSlave.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:wu="https://github.com/Monika1313/Wu"
             d:DataContext="{x:Static dvm:MrtuSlaveDesignViewModel.Instance}"
             d:Height="500"
             d:Width="700"
             prism:ViewModelLocator.AutoWireViewModel="True"
             Cursor=""
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="MrtuDeviceListBoxItem" TargetType="ListBoxItem">
            <Setter Property="MinHeight" Value="40" />
            <Setter Property="core:AutoSelectWhenAnyChildGetsFocus.Enabled" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid>
                            <Border x:Name="borderHeader" />
                            <Border x:Name="border" />
                            <ContentPresenter Margin="0"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="borderHeader" Property="BorderThickness" Value="2,0,0,0" />
                                <Setter TargetName="borderHeader" Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="border" Property="Opacity" Value="0.1" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                                <Setter TargetName="border" Property="Opacity" Value="0.2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <md:DialogHost Style="{StaticResource MaterialDesignEmbeddedDialogHost}">
            <md:DrawerHost IsLeftDrawerOpen="{Binding OpenDrawers.LeftDrawer}" IsRightDrawerOpen="{Binding OpenDrawers.RightDrawer}">
                <md:DrawerHost.LeftDrawerContent>
                    <Border DockPanel.Dock="Top" Style="{StaticResource FormBorder}">
                        <ScrollViewer>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Margin="5"
                                           HorizontalAlignment="Center"
                                           FontSize="24"
                                           Text="设置" />
                                <StackPanel Orientation="Horizontal">
                                    <ComboBox Width="230"
                                              hc:InfoElement.Necessary="True"
                                              hc:InfoElement.Placeholder="请选择串口..."
                                              hc:InfoElement.Title="串口"
                                              IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                              ItemsSource="{Binding MrtuSlaveModel.ComPorts}"
                                              SelectedValue="{Binding MrtuSlaveModel.ComPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource FormComboBox}" />

                                    <Button Width="30"
                                            Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                            Margin="5"
                                            HorizontalAlignment="Left"
                                            hc:Poptip.Content="查找串口设备"
                                            Command="{Binding MrtuSlaveModel.GetComPortsCommand}"
                                            Content="{md:PackIcon Kind=Search}"
                                            DockPanel.Dock="Left"
                                            IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                            Style="{StaticResource Blue_CircleButton}" />
                                </StackPanel>

                                <TextBox hc:InfoElement.Necessary="True"
                                         hc:TitleElement.Title="从站ID:"
                                         hc:TitleElement.TitleWidth="100"
                                         IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                         Style="{StaticResource FormTextBox}"
                                         Text="{Binding MrtuSlaveModel.SlaveId}" />

                                <ComboBox hc:InfoElement.Necessary="True"
                                          hc:InfoElement.Placeholder="请选择波特率..."
                                          hc:InfoElement.Title="波特率"
                                          IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                          ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:BaudRate}}}"
                                          SelectedItem="{Binding MrtuSlaveModel.BaudRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource FormComboBox}" />

                                <ComboBox hc:InfoElement.Necessary="True"
                                          hc:InfoElement.Placeholder="请选择校验位..."
                                          hc:InfoElement.Title="校验位"
                                          IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                          ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:Parity}}}"
                                          SelectedValue="{Binding MrtuSlaveModel.Parity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource FormComboBox}" />

                                <ComboBox hc:InfoElement.Placeholder="请选择数据位..."
                                          hc:InfoElement.Title="数据位"
                                          IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                          ItemsSource="{StaticResource DataBits}"
                                          SelectedItem="{Binding MrtuSlaveModel.DataBits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource FormComboBox}" />

                                <ComboBox hc:InfoElement.Placeholder="请选择停止位..."
                                          hc:InfoElement.Title="停止位"
                                          IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                          ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:StopBits}}}"
                                          SelectedItem="{Binding MrtuSlaveModel.StopBits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource FormComboBox}" />

                                <TextBox hc:TitleElement.Title="分包超时(ms):"
                                         hc:TitleElement.TitleWidth="100"
                                         IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                         Style="{StaticResource FormTextBox}"
                                         Text="{Binding MrtuSlaveModel.TimeOut}" />

                                <TextBox hc:TitleElement.Title="分包最大字节:"
                                         hc:TitleElement.TitleWidth="100"
                                         IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                         Style="{StaticResource FormTextBox}"
                                         Text="{Binding MrtuSlaveModel.MaxLength}" />

                                <ComboBox MinWidth="135"
                                          hc:Poptip.Content="PC为小端, PLC为大端, PC读取使用DCBA, PLC读取需要设置ABCD"
                                          hc:TitleElement.Title="字节序"
                                          ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type core:ModbusByteOrder}}}"
                                          SelectedItem="{Binding MrtuSlaveModel.ByteOrder}"
                                          Style="{StaticResource FormComboBox}" />

                                <StackPanel HorizontalAlignment="Center"
                                            VerticalAlignment="Top"
                                            Orientation="Horizontal">
                                    <Button Margin="20"
                                            Command="{Binding MrtuSlaveModel.RunCommand}"
                                            Content="打开"
                                            IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                            Style="{StaticResource GreenButton}" />

                                    <Button Width="60"
                                            Margin="20"
                                            Command="{Binding MrtuSlaveModel.StopCommand}"
                                            Content="关闭"
                                            DockPanel.Dock="Left"
                                            IsEnabled="{Binding MrtuSlaveModel.IsOpened}"
                                            Style="{StaticResource RedButton}" />
                                </StackPanel>


                            </StackPanel>
                        </ScrollViewer>
                    </Border>
                </md:DrawerHost.LeftDrawerContent>

                <DockPanel>
                    <Grid DockPanel.Dock="Top">
                        <TextBlock HorizontalAlignment="Center"
                                   Style="{StaticResource TitleTextBlock}"
                                   Text="ModbusRTU 从站" />
                        <DockPanel Margin="0">
                            <Button Width="30"
                                    Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                    Margin="5"
                                    hc:Poptip.Content="查看日志"
                                    Command="{Binding MrtuSlaveModel.OpenMrtuSlaveLogViewCommand}"
                                    Content="{md:PackIcon Kind=NoteTextOutline}"
                                    Cursor="Hand"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource Blue_CircleButton}" />

                            <!--  配置Com按钮  -->
                            <Button Width="30"
                                    Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                    Margin="5"
                                    HorizontalAlignment="Left"
                                    hc:Poptip.Content="配置串口"
                                    Command="{Binding ExecuteCommand}"
                                    CommandParameter="OpenLeftDrawer"
                                    Content="{md:PackIcon Kind=Cog}"
                                    Cursor="Hand"
                                    Style="{StaticResource Blue_CircleButton}" />

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">

                                <Button Width="30"
                                        Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                        Margin="5"
                                        HorizontalAlignment="Left"
                                        Background="{StaticResource Green_Background}"
                                        BorderBrush="{StaticResource Green_BorderBrush}"
                                        Command="{Binding MrtuSlaveModel.RunCommand}"
                                        Content="{md:PackIcon Kind=Play}"
                                        Cursor="Hand"
                                        Foreground="{StaticResource Green_Foreground}"
                                        IsEnabled="{Binding MrtuSlaveModel.IsOpened, Converter={wu:ReverseBool}}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" />

                                <Button Width="30"
                                        Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                        Margin="5"
                                        HorizontalAlignment="Left"
                                        Command="{Binding MrtuSlaveModel.StopCommand}"
                                        Content="{md:PackIcon Kind=Stop}"
                                        Cursor="Hand"
                                        IsEnabled="{Binding MrtuSlaveModel.IsOpened}"
                                        Style="{StaticResource Red_CircleButton}" />

                            </StackPanel>

                        </DockPanel>
                    </Grid>

                    <Grid>
                        <DataGrid x:Name="dataGrid"
                                  Margin="4"
                                  AutoGenerateColumns="False"
                                  Background="Transparent"
                                  CanUserSortColumns="False"
                                  Cursor=""
                                  FrozenColumnCount="1"
                                  HeadersVisibility="Column"
                                  IsReadOnly="True"
                                  ItemsSource="{Binding MrtuSlaveModel.MrtuDatas}">
                            <!--  右键菜单  -->
                            <DataGrid.ContextMenu>
                                <ContextMenu StaysOpen="true">
                                    <!--<MenuItem Margin="2"
                                          Command="{Binding MrtuDeviceManager.SelectedMrtuDevice.AddNewMrtuDataCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Header="新建行" />
                                <MenuItem Margin="2"
                                          Command="{Binding MrtuDeviceManager.SelectedMrtuDevice.DeleteMrtuDataCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Foreground="Red"
                                          Header="删除行" />-->
                                    <!--<MenuItem Margin="2"
                                          Command="{Binding MrtuDeviceManager.SelectedMrtuDevice.AllMrtuDataRegisterAddrAdd1Command}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Header="所有测点寄存器地址 ＋1" />
                                <MenuItem Margin="2"
                                          Command="{Binding MrtuDeviceManager.SelectedMrtuDevice.AllMrtuDataRegisterAddrSub1Command}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Header="所有测点寄存器地址 －1" />-->
                                    <!--<MenuItem Margin="2"
                                      Command="{Binding OpenMrtuDataEditViewCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                      Header="编辑"
                                      Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}, Mode=FindAncestor}, Path=PlacementTarget.SelectedItem, Converter={core:Null2Collapsed}}" />-->
                                </ContextMenu>
                            </DataGrid.ContextMenu>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Background" Value="Transparent" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.CellStyle>
                                <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="DataGridCell">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Style.Triggers>
                                        <Trigger Property="IsKeyboardFocused" Value="False">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>

                            <!--  添加触发器,支持点击事件  -->
                            <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DataContext.OpenMrtuDataEditViewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" CommandParameter="{Binding ElementName=dataGrid, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="名称">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Width="120" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="值">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border MinWidth="60"
                                                    Padding="8,4"
                                                    BorderThickness="1"
                                                    CornerRadius="4">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="false">
                                                                <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                                                <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="true">
                                                                <Setter Property="Background" Value="{StaticResource Purple_Background}" />
                                                                <Setter Property="BorderBrush" Value="{StaticResource Purple_BorderBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock FontSize="13" Text="{Binding Value}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="false">
                                                                    <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="true">
                                                                    <Setter Property="Foreground" Value="{StaticResource Purple_Foreground}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="单位">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox MinWidth="40"
                                                     HorizontalContentAlignment="Center"
                                                     Text="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="寄存器地址">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox MinWidth="60"
                                                     HorizontalContentAlignment="Center"
                                                     Text="{Binding RegisterAddr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--<DataGridTemplateColumn Header="数据类型">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type core:MrtuDataType}}}" SelectedValue="{Binding MrtuDataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>-->

                                <DataGridTextColumn Binding="{Binding UpdateTime, StringFormat={}{0:HH:mm:ss}}"
                                                    ElementStyle="{StaticResource CenterDataGridTextColumn}"
                                                    Foreground="Black"
                                                    Header="更新时间" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </DockPanel>
            </md:DrawerHost>
        </md:DialogHost>
        <ScrollViewer HorizontalAlignment="Right" VerticalScrollBarVisibility="Hidden">
            <StackPanel Margin="0,10,10,10"
                        VerticalAlignment="Top"
                        hc:Growl.Token="{x:Static local:MrtuSlaveView.ViewName}" />
        </ScrollViewer>
    </Grid>
</UserControl>
