<UserControl x:Class="Wu.CommTool.Modules.ModbusRtu.Views.MrtuDeviceMonitorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:core="Wu.CommTool.Core"
             xmlns:coreCvt="clr-namespace:Wu.CommTool.Core.Converters;assembly=Wu.CommTool.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dvm="clr-namespace:Wu.CommTool.Modules.ModbusRtu.ViewModels.DesignViewModels"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Wu.CommTool.Modules.ModbusRtu.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:Wu.CommTool.Modules.ModbusRtu.Models"
             xmlns:wu="https://github.com/Monika1313/Wu"
             xmlns:wuctrl="clr-namespace:Wu.Wpf.ControlLibrary;assembly=Wu.Wpf.ControlLibrary"
             d:DataContext="{x:Static dvm:MrtuDeviceMonitorDesignViewModel.Instance}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <md:DialogHost Identifier="{x:Static local:MrtuDeviceMonitorView.ViewName}" Style="{StaticResource MaterialDesignEmbeddedDialogHost}">
        <md:DrawerHost IsRightDrawerOpen="{Binding OpenDrawers.RightDrawer}">
            <!--<md:DrawerHost.RightDrawerContent>
                <DockPanel>
                    <DockPanel DockPanel.Dock="Top" LastChildFill="False">
            -->
            <!--  暂停显示按钮  -->
            <!--
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                Cursor="Hand"
                                DockPanel.Dock="Left">
                            <md:PackIcon Width="24" Height="24">
                                <md:PackIcon.Style>
                                    <Style TargetType="md:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ModbusRtuModel.IsPause}" Value="true">
                                                <Setter Property="Kind" Value="PlayPause" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ModbusRtuModel.IsPause}" Value="false">
                                                <Setter Property="Kind" Value="Pause" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </md:PackIcon.Style>
                            </md:PackIcon>
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ModbusRtuModel.IsPause}" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                            <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                            <Setter Property="hc:Poptip.Content" Value="启用界面更新" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ModbusRtuModel.IsPause}" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource Yellow_Foreground}" />
                                            <Setter Property="Background" Value="{StaticResource Yellow_Background}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource Yellow_BorderBrush}" />
                                            <Setter Property="hc:Poptip.Content" Value="暂停界面更新" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
            -->
            <!--  清空消息按钮  -->
            <!--
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                hc:Poptip.Content="清空消息"
                                Command="{Binding ModbusRtuModel.MessageClearCommand}"
                                Content="{md:PackIcon Kind=Delete}"
                                DockPanel.Dock="Left"
                                Style="{StaticResource Red_CircleButton}" />
                    </DockPanel>

            -->
            <!--  页面消息  -->
            <!--
                    <ContentControl Width="700"
                                    Margin="4,0"
                                    DockPanel.Dock="Top"
                                    Style="{StaticResource Effect2Control}">
                        <hc:ScrollViewer wu:ScrollViewerExtensions.AlwaysScrollToEnd="True" IsInertiaEnabled="True">
                            <ItemsControl Background="Transparent" ItemsSource="{Binding ModbusRtuModel.Messages, Mode=OneTime, IsAsync=True}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.Resources>
                                    <DataTemplate DataType="{x:Type core:MessageData}">
                                        <Border Style="{StaticResource MessageBorder}" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                            <WrapPanel Orientation="Horizontal">
                                                <TextBlock Margin="3"
                                                           VerticalAlignment="Center"
                                                           Style="{StaticResource MessageTextBlock}"
                                                           Text="{Binding Time, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                                                <TextBlock Margin="5,0"
                                                           VerticalAlignment="Center"
                                                           Style="{StaticResource MessageTextBlock}"
                                                           Text="{Binding Type}" />
                                                <TextBox VerticalAlignment="Center"
                                                         FontSize="12"
                                                         FontWeight="Bold"
                                                         IsReadOnly="True"
                                                         Style="{StaticResource MessageTextBox}"
                                                         Text="{Binding Content}"
                                                         TextWrapping="Wrap" />
                                            </WrapPanel>
                                        </Border>
                                    </DataTemplate>

                                    <DataTemplate DataType="{x:Type models:ModbusRtuMessageData}">
                                        <Border Style="{StaticResource MessageBorder}" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.OpenAnalyzeFrameViewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Border.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.CopyModbusRtuFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                              CommandParameter="{Binding}"
                                                              Header="复制Modbus数据帧"
                                                              Visibility="{Binding ModbusRtuFrame, Converter={coreCvt:Null2Collapsed}}" />
                                                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.OpenAnalyzeFrameViewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                              CommandParameter="{Binding}"
                                                              Header="解析数据帧"
                                                              Visibility="{Binding ModbusRtuFrame, Converter={coreCvt:Null2Collapsed}}" />
                                                </ContextMenu>
                                            </Border.ContextMenu>
                                            <WrapPanel Orientation="Horizontal">
                                                <TextBlock Margin="3"
                                                           VerticalAlignment="Center"
                                                           Style="{StaticResource MessageTextBlock}"
                                                           Text="{Binding Time, StringFormat={}{0:yyyy-MM-dd HH:mm:ss.fff}}" />
                                                <TextBlock Margin="5,0"
                                                           VerticalAlignment="Center"
                                                           Style="{StaticResource MessageTextBlock}"
                                                           Text="{Binding Type}" />
            -->
            <!--<TextBox VerticalAlignment="Center"
                                              FontSize="12"
                                              FontWeight="Bold"
                                              IsReadOnly="True"
                                              Style="{StaticResource MessageTextBox}"
                                              Text="{Binding Content}"
                                              TextWrapping="Wrap" />-->
            <!--

                                                <ItemsControl Background="Transparent"
                                                              ItemsSource="{Binding MessageSubContents}"
                                                              Visibility="{Binding MessageSubContents.Count, Converter={wu:Zero2Collapsed}}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel VerticalAlignment="Center" Orientation="Horizontal" />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Margin="3,0,3,0"
                                                                       VerticalAlignment="Center"
                                                                       FontWeight="Bold"
                                                                       Style="{StaticResource ModbusRtuMessageTextBlock}"
                                                                       Text="{Binding Content}"
                                                                       TextWrapping="Wrap" />
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </WrapPanel>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.Resources>
                            </ItemsControl>
                        </hc:ScrollViewer>
                    </ContentControl>
                </DockPanel>
            </md:DrawerHost.RightDrawerContent>-->
            <DockPanel>
                <Grid DockPanel.Dock="Top">
                    <TextBlock HorizontalAlignment="Center"
                               Style="{StaticResource TitleTextBlock}"
                               Text="ModbusRTU 设备监控 开发中..." />
                    <StackPanel Orientation="Horizontal">

                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                Background="{StaticResource Green_Background}"
                                BorderBrush="{StaticResource Green_BorderBrush}"
                                Command="{Binding MrtuDeviceManager.RunCommand}"
                                Content="{md:PackIcon Kind=Play}"
                                Cursor="Hand"
                                Foreground="{StaticResource Green_Foreground}"
                                IsEnabled="{Binding MrtuDeviceManager.Status, Converter={wu:ReverseBool}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}" />

                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                Command="{Binding MrtuDeviceManager.StopCommand}"
                                Content="{md:PackIcon Kind=Stop}"
                                Cursor="Hand"
                                IsEnabled="{Binding MrtuDeviceManager.Status}"
                                Style="{StaticResource Red_CircleButton}" />

                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="4"
                                hc:Poptip.Content="导出配置文件"
                                Command="{Binding ExportConfigCommand}"
                                Content="{md:PackIcon Kind=Upload}"
                                Cursor="Hand"
                                DockPanel.Dock="Right"
                                Style="{StaticResource Blue_CircleButton}" />
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="4"
                                hc:Poptip.Content="导入配置文件"
                                Command="{Binding ImportConfigCommand}"
                                Content="{md:PackIcon Kind=Download}"
                                Cursor="Hand"
                                DockPanel.Dock="Right"
                                Style="{StaticResource Blue_CircleButton}" />
                        <!--<Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                hc:Poptip.Content="查看消息"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="OpenRightDrawer"
                                Content="{md:PackIcon Kind=Eye}"
                                DockPanel.Dock="Right"
                                Style="{StaticResource Blue_CircleButton}" />-->
                    </StackPanel>
                </Grid>
                <Grid DockPanel.Dock="Left">
                    <ContentControl Width="150" Style="{StaticResource Effect2Control}">
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Center" Text="设备列表" />

                            <ItemsControl Margin="0"
                                          Background="Transparent"
                                          IsTabStop="False"
                                          ItemsSource="{Binding MrtuDeviceManager.MrtuDevices, IsAsync=True}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="models:MrtuDevice">
                                        <ContentControl Height="80"
                                                        Style="{StaticResource Effect2Control}"
                                                        Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                            <ContentControl.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.EditMrtuDeviceCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                              CommandParameter="{Binding}"
                                                              Header="设置" />
                                                </ContextMenu>
                                            </ContentControl.ContextMenu>


                                            <StackPanel>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Name}" />
                                            </StackPanel>
                                        </ContentControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ContentControl>
                </Grid>
                <Grid>
                    <DataGrid x:Name="dataGrid"
                              Margin="4"
                              AutoGenerateColumns="False"
                              Background="Transparent"
                              CanUserSortColumns="False"
                              FrozenColumnCount="1"
                              HeadersVisibility="Column"
                              IsReadOnly="True"
                              ItemsSource="{Binding CurrentDevice.MrtuDatas}">
                        <!--  右键菜单  -->
                        <DataGrid.ContextMenu>
                            <ContextMenu StaysOpen="true">
                                <MenuItem Margin="2"
                                          Command="{Binding OpenMrtuDataEditViewCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Header="编辑" />
                                <MenuItem Margin="2"
                                          Command="{Binding CurrentDevice.DeleteMrtuDataCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Foreground="Red"
                                          Header="删除行" />
                                <MenuItem Margin="2"
                                          Command="{Binding CurrentDevice.AddNewMrtuDataCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                                          Header="新建行" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                        <!--  添加触发器,支持点击事件  -->
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding DataContext.OpenMrtuDataEditViewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" CommandParameter="{Binding ElementName=dataGrid, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="名称">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="120" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!--<DataGridTextColumn Binding="{Binding Status}" Header="状态" />-->

                            <DataGridTemplateColumn Header="状态">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Ellipse Width="20"
                                                 Height="20"
                                                 Margin="{Binding ElementName=self, Path=Margin}"
                                                 d:Fill="LawnGreen">
                                            <Ellipse.Effect>
                                                <BlurEffect Radius="{Binding ElementName=self, Path=BlurEffectRadius}" />
                                            </Ellipse.Effect>
                                            <Ellipse.Style>
                                                <Style TargetType="Ellipse">
                                                    <Setter Property="Fill" Value="Red" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="true">
                                                            <Setter Property="Fill" Value="LawnGreen" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=Status}" Value="false">
                                                            <Setter Property="Fill" Value="Red" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Ellipse.Style>
                                        </Ellipse>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>



                            <DataGridTemplateColumn Header="值">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border MinWidth="60"
                                                Padding="8,4"
                                                BorderThickness="1"
                                                CornerRadius="4">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="false">
                                                            <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="true">
                                                            <Setter Property="Background" Value="{StaticResource Purple_Background}" />
                                                            <Setter Property="BorderBrush" Value="{StaticResource Purple_BorderBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock FontSize="13" Text="{Binding Value}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="false">
                                                                <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Name, Converter={wu:StringIsNullOrWhiteSpace2Visibility}}" Value="true">
                                                                <Setter Property="Foreground" Value="{StaticResource Purple_Foreground}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>



                            <DataGridTemplateColumn Header="寄存器类型">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type core:RegisterType}}}" SelectedValue="{Binding RegisterType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Header="寄存器地址">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox MinWidth="60"
                                                 HorizontalContentAlignment="Center"
                                                 Text="{Binding RegisterAddr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Header="数据类型">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type core:MrtuDataType}}}" SelectedValue="{Binding MrtuDataType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding UpdateTime, StringFormat={}{0:HH:mm:ss}}"
                                                ElementStyle="{StaticResource CenterDataGridTextColumn}"
                                                Header="更新时间" />



                            <!--<DataGridTextColumn Binding="{Binding MrtuDataType}"
                                                ElementStyle="{StaticResource CenterDataGridTextColumn}"
                                                Header="数据类型" />-->
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </DockPanel>
        </md:DrawerHost>
    </md:DialogHost>
</UserControl>
