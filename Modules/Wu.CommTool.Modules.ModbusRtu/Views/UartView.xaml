<UserControl x:Class="Wu.CommTool.Modules.ModbusRtu.Views.UartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:core="Wu.CommTool.Core"
             xmlns:coreCvt="clr-namespace:Wu.CommTool.Core.Converters;assembly=Wu.CommTool.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dvm="clr-namespace:Wu.CommTool.Modules.ModbusRtu.ViewModels.DesignViewModels"
             xmlns:enums="clr-namespace:Wu.CommTool.Modules.ModbusRtu.Enums"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Wu.CommTool.Modules.ModbusRtu.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:models="clr-namespace:Wu.CommTool.Modules.ModbusRtu.Models"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:wu="https://github.com/Monika1313/Wu"
             xmlns:wuctrl="clr-namespace:Wu.Wpf.ControlLibrary;assembly=Wu.Wpf.ControlLibrary"
             d:DataContext="{x:Static dvm:UartDesignViewModel.Instance}"
             d:DesignHeight="500"
             d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d">

    <md:DialogHost Identifier="{x:Static local:EditUartCustomnFrameView.ViewName}">
        <md:DrawerHost IsLeftDrawerOpen="{Binding OpenDrawers.LeftDrawer}" IsRightDrawerOpen="{Binding OpenDrawers.RightDrawer}">
            <!--  左侧抽屉  -->
            <md:DrawerHost.LeftDrawerContent>
                <Border DockPanel.Dock="Top" Style="{StaticResource FormBorder}">
                    <ScrollViewer>
                        <StackPanel Orientation="Vertical">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <TextBlock Margin="10"
                                           Style="{DynamicResource SecondTitle}"
                                           Text="串口设置" />

                                <!--  导出配置文件  -->
                                <Button Width="30"
                                        Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                        Margin="4"
                                        hc:Poptip.Content="导出配置文件"
                                        Command="{Binding ExecuteCommand}"
                                        CommandParameter="ExportConfig"
                                        Content="{md:PackIcon Kind=Upload}"
                                        Cursor="Hand"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource Blue_CircleButton}" />

                                <!--  导入配置文件  -->
                                <Button Width="30"
                                        Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                        Margin="4"
                                        hc:Poptip.Content="导入配置文件"
                                        Command="{Binding ExecuteCommand}"
                                        CommandParameter="ImportConfig"
                                        Content="{md:PackIcon Kind=Download}"
                                        Cursor="Hand"
                                        DockPanel.Dock="Right"
                                        IsEnabled="{Binding MqttServerConfig.IsOpened, Converter={wu:ReverseBool}}"
                                        Style="{StaticResource Blue_CircleButton}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <ComboBox Width="230"
                                          hc:InfoElement.Placeholder="请选择串口..."
                                          hc:InfoElement.Title="串口"
                                          IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                          ItemsSource="{Binding UartModel.ComPorts}"
                                          SelectedValue="{Binding UartModel.ComConfig.ComPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource FormComboBox}" />
                                <Button Width="30"
                                        Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                        Margin="5"
                                        HorizontalAlignment="Left"
                                        hc:Poptip.Content="查找串口设备"
                                        Command="{Binding UartModel.GetComPortsCommand}"
                                        Content="{md:PackIcon Kind=Search}"
                                        DockPanel.Dock="Left"
                                        IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                        Style="{StaticResource Blue_CircleButton}" />
                            </StackPanel>
                            <ComboBox hc:InfoElement.Placeholder="请选择波特率..."
                                      hc:InfoElement.Title="波特率"
                                      IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                      ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:BaudRate}}}"
                                      SelectedItem="{Binding UartModel.ComConfig.BaudRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource FormComboBox}" />

                            <ComboBox hc:InfoElement.Placeholder="请选择校验位..."
                                      hc:InfoElement.Title="校验位"
                                      IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                      ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:Parity}}}"
                                      SelectedValue="{Binding UartModel.ComConfig.Parity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource FormComboBox}" />

                            <ComboBox hc:InfoElement.Placeholder="请选择数据位..."
                                      hc:InfoElement.Title="数据位"
                                      IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                      ItemsSource="{StaticResource DataBits}"
                                      SelectedItem="{Binding UartModel.ComConfig.DataBits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource FormComboBox}" />

                            <ComboBox hc:InfoElement.Placeholder="请选择停止位..."
                                      hc:InfoElement.Title="停止位"
                                      IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                      ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:StopBits}}}"
                                      SelectedItem="{Binding UartModel.ComConfig.StopBits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource FormComboBox}" />

                            <TextBox hc:TitleElement.Title="分包超时(ms):"
                                     hc:TitleElement.TitleWidth="100"
                                     IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                     Style="{StaticResource FormTextBox}"
                                     Text="{Binding UartModel.ComConfig.TimeOut}" />

                            <TextBox hc:TitleElement.Title="分包最大字节:"
                                     hc:TitleElement.TitleWidth="100"
                                     IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                     Style="{StaticResource FormTextBox}"
                                     Text="{Binding UartModel.ComConfig.MaxLength}" />

                            <!--<ComboBox MinWidth="135"
                                  hc:Poptip.Content="PC为小端, PLC为大端, PC读取使用DCBA, PLC读取需要设置ABCD"
                                  hc:TitleElement.Title="字节序"
                                  ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type core:ModbusByteOrder}}}"
                                  SelectedItem="{Binding UartModel.ByteOrder}"
                                  Style="{StaticResource FormComboBox}" />-->

                            <StackPanel HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Orientation="Horizontal">
                                <Button Margin="20"
                                        hc:Poptip.Content="打开串口"
                                        Command="{Binding ExecuteCommand}"
                                        CommandParameter="OpenCom"
                                        Content="打开"
                                        IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                        Style="{StaticResource GreenButton}" />

                                <Button Width="60"
                                        Margin="20"
                                        hc:Poptip.Content="关闭串口"
                                        Command="{Binding ExecuteCommand}"
                                        CommandParameter="CloseCom"
                                        Content="关闭"
                                        DockPanel.Dock="Left"
                                        IsEnabled="{Binding UartModel.ComConfig.IsOpened}"
                                        Style="{StaticResource RedButton}" />
                            </StackPanel>

                            <!--<ContentControl Style="{StaticResource Effect2Control}">
                            <StackPanel>
                                <TextBlock Style="{StaticResource TextBlockTitle}" Text="开发中的功能" />
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    Foreground="{StaticResource Red_Foreground}"
                                    Text="若无法正常使用请禁用功能" />
                                <DockPanel>
                                    <TextBlock
                                        Margin="10"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        Text="自动分帧" />

                                    <ComboBox
                                        Margin="10"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type core:Enable}}}"
                                        SelectedItem="{Binding UartModel.ComConfig.AutoFrame}"
                                        Style="{StaticResource ComboBoxCapsule}" />
                                </DockPanel>
                            </StackPanel>
                        </ContentControl>-->
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </md:DrawerHost.LeftDrawerContent>
            <!--  主体内容  -->
            <DockPanel>
                <!--  头部区域  -->
                <Grid DockPanel.Dock="Top">
                    <TextBlock Style="{StaticResource TitleTextBlock}" Text="串口" />
                    <DockPanel LastChildFill="False">

                        <!--  配置Com按钮  -->
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                hc:Poptip.Content="配置串口"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="OpenLeftDrawer"
                                Content="{md:PackIcon Kind=Cog}"
                                Cursor="Hand"
                                Style="{StaticResource Blue_CircleButton}" />

                        <!--  打开串口  -->
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                hc:Poptip.Content="打开串口"
                                Background="{StaticResource Green_Background}"
                                BorderBrush="{StaticResource Green_BorderBrush}"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="OpenCom"
                                Content="{md:PackIcon Kind=Play}"
                                Cursor="Hand"
                                Foreground="{StaticResource Green_Foreground}"
                                IsEnabled="{Binding UartModel.ComConfig.IsOpened, Converter={wu:ReverseBool}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}" />

                        <!--  关闭串口  -->
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                hc:Poptip.Content="关闭串口"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="CloseCom"
                                Content="{md:PackIcon Kind=Stop}"
                                Cursor="Hand"
                                IsEnabled="{Binding UartModel.ComConfig.IsOpened}"
                                Style="{StaticResource Red_CircleButton}" />

                        <!--  暂停界面更新  -->
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                Command="{Binding UartModel.PauseCommand}">
                            <md:PackIcon Width="24" Height="24">
                                <md:PackIcon.Style>
                                    <Style TargetType="md:PackIcon">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding UartModel.IsPause}" Value="true">
                                                <Setter Property="Kind" Value="PlayPause" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding UartModel.IsPause}" Value="false">
                                                <Setter Property="Kind" Value="Pause" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </md:PackIcon.Style>
                            </md:PackIcon>
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UartModel.IsPause}" Value="true">
                                            <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                            <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                            <Setter Property="hc:Poptip.Content" Value="启用界面更新" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding UartModel.IsPause}" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource Yellow_Foreground}" />
                                            <Setter Property="Background" Value="{StaticResource Yellow_Background}" />
                                            <Setter Property="BorderBrush" Value="{StaticResource Yellow_BorderBrush}" />
                                            <Setter Property="hc:Poptip.Content" Value="暂停界面更新" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--<ToggleButton Margin="5,0"
                                  md:ToggleButtonAssist.OnContent="{md:PackIcon Kind=PlayPause}"
                                  BorderBrush="Blue"
                                  BorderThickness="1"
                                  Content="{md:PackIcon Kind=Pause}"
                                  IsChecked="{Binding UartModel.IsPause}">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource MaterialDesignActionToggleButton}" TargetType="ToggleButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UartModel.IsPause}" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                        <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding UartModel.IsPause}" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource Yellow_Foreground}" />
                                        <Setter Property="Background" Value="{StaticResource Yellow_Background}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource Yellow_BorderBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>-->

                        <!--  清空消息按钮  -->
                        <Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                hc:Poptip.Content="清空消息"
                                Command="{Binding UartModel.MessageClearCommand}"
                                Content="{md:PackIcon Kind=Delete}"
                                Style="{StaticResource Red_CircleButton}" />
                    </DockPanel>
                </Grid>

                <!--  发送区域  -->
                <Grid DockPanel.Dock="Bottom">
                    <Expander Margin="4"
                              Background="White"
                              DockPanel.Dock="Bottom"
                              ExpandDirection="Up"
                              IsExpanded="True">
                        <Expander.Header>
                            <StackPanel Height="30"
                                        DockPanel.Dock="Bottom"
                                        Orientation="Horizontal">
                                <wuctrl:BreatheLight IsBreathing="{Binding UartModel.ComConfig.IsOpened}" />

                                <TextBlock FontWeight="Bold"
                                           Style="{DynamicResource DefaultTextBlock}"
                                           Text="{Binding UartModel.ComConfig.ComPort.Port}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text=" : " />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="{Binding UartModel.ComConfig.ComPort.DeviceName}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="  " />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="{Binding UartModel.ComConfig.Parity}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="  " />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="{Binding UartModel.ComConfig.DataBits}" />
                                <TextBlock Margin="5,0"
                                           Style="{DynamicResource DefaultTextBlock}"
                                           Text="{Binding UartModel.ComConfig.StopBits}" />

                                <wuctrl:BreatheLight Margin="30,5,5,5"
                                                     IsBreathing="{Binding UartModel.ComConfig.IsReceiving}"
                                                     Visibility="{Binding UartModel.ComConfig.IsReceiving, Converter={wu:False2Hidden}}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="接收: " />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="{Binding UartModel.ReceiveBytesCount}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text=" Bytes" />

                                <wuctrl:BreatheLight Margin="30,5,5,5"
                                                     IsBreathing="{Binding UartModel.ComConfig.IsSending}"
                                                     Visibility="{Binding UartModel.ComConfig.IsSending, Converter={wu:False2Hidden}}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="发送: " />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text="{Binding UartModel.SendBytesCount}" />
                                <TextBlock Style="{DynamicResource DefaultTextBlock}" Text=" Bytes" />
                            </StackPanel>
                        </Expander.Header>
                        <!--<Expander.Style>
                        <Style BasedOn="{StaticResource ExpanderBaseStyle}" TargetType="Expander">
                            <Setter Property="IsExpanded" Value="True" />
                            <Style.Triggers>
                                <DataTrigger />
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>-->
                        <Border Background="{DynamicResource RegionBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1,1,1,0"
                                CornerRadius="4,4,0,0">
                            <DockPanel DockPanel.Dock="Bottom">
                                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                                    <StackPanel Cursor=""
                                                DockPanel.Dock="Left"
                                                Orientation="Horizontal">
                                        <ComboBox MinWidth="190"
                                                  hc:InfoElement.Placeholder="请选择校验模式..."
                                                  hc:InfoElement.Title="自动校验模式: "
                                                  hc:InfoElement.TitleWidth="90"
                                                  ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:CrcMode}}}"
                                                  SelectedItem="{Binding UartModel.CrcMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  Style="{StaticResource FormComboBox}" />

                                    </StackPanel>




                                    <ComboBox MinWidth="150"
                                              hc:InfoElement.Title="发送格式: "
                                              hc:InfoElement.TitleWidth="65"
                                              DockPanel.Dock="Right"
                                              ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:UartDataFormat}}}"
                                              SelectedItem="{Binding UartModel.SendDataFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource FormComboBox}" />
                                    <ComboBox MinWidth="150"
                                              hc:InfoElement.Title="接收格式: "
                                              hc:InfoElement.TitleWidth="65"
                                              DockPanel.Dock="Right"
                                              ItemsSource="{Binding Source={wu:EnumBindingSource {x:Type enums:UartDataFormat}}}"
                                              SelectedItem="{Binding UartModel.ReceiveDataFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource FormComboBox}" />


                                </DockPanel>


                                <ContentControl MaxHeight="400"
                                                Margin="4,0"
                                                Padding="0"
                                                Style="{StaticResource Effect2Control}">
                                    <hc:ScrollViewer IsInertiaEnabled="True">
                                        <ItemsControl Background="Transparent" ItemsSource="{Binding UartModel.CustomFrames}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <DockPanel Margin="4">
                                                        <Button Margin="0"
                                                                Command="{Binding DataContext.UartModel.SendCustomFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                CommandParameter="{Binding}"
                                                                Content="发送"
                                                                Cursor="Hand"
                                                                DockPanel.Dock="Right" />

                                                        <ToggleButton Margin="5,0"
                                                                      md:ToggleButtonAssist.OnContent="{md:PackIcon Kind=TimerOutline}"
                                                                      Content="{md:PackIcon Kind=TimerOffOutline}"
                                                                      DockPanel.Dock="Right"
                                                                      IsChecked="{Binding Enable}">
                                                            <ToggleButton.Style>
                                                                <Style BasedOn="{StaticResource MaterialDesignActionToggleButton}" TargetType="ToggleButton">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Enable}" Value="true">
                                                                            <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                                                            <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                                                            <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                                                        </DataTrigger>

                                                                        <DataTrigger Binding="{Binding Enable}" Value="false">
                                                                            <Setter Property="Foreground" Value="{StaticResource Yellow_Foreground}" />
                                                                            <Setter Property="Background" Value="{StaticResource Yellow_Background}" />
                                                                            <Setter Property="BorderBrush" Value="{StaticResource Yellow_BorderBrush}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>

                                                        <hc:TextBox VerticalContentAlignment="Top"
                                                                    hc:InfoElement.Placeholder="右键菜单可以新增行、删除行"
                                                                    hc:InfoElement.ShowClearButton="False"
                                                                    Style="{StaticResource TextBoxPlusBaseStyle}"
                                                                    Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                                                    Text="{Binding Frame, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    TextWrapping="Wrap">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Enter"
                                                                            Command="{Binding DataContext.UartModel.SendCustomFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                            CommandParameter="{Binding}" />
                                                            </TextBox.InputBindings>
                                                            <TextBoxBase.ContextMenu>
                                                                <ContextMenu>
                                                                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.EditCustomFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                                              CommandParameter="{Binding}"
                                                                              Header="编辑" />
                                                                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.UartModel.AddNewCustomFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Header="新增行" />
                                                                    <MenuItem Command="{Binding Path=PlacementTarget.Tag.UartModel.DeleteCustomFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                                              CommandParameter="{Binding}"
                                                                              Header="删除行" />
                                                                </ContextMenu>
                                                            </TextBoxBase.ContextMenu>
                                                        </hc:TextBox>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </hc:ScrollViewer>
                                </ContentControl>
                            </DockPanel>
                        </Border>
                    </Expander>

                </Grid>

                <!--  页面消息  -->
                <ContentControl Margin="4,0"
                                DockPanel.Dock="Top"
                                Style="{StaticResource Effect2Control}">
                    <hc:ScrollViewer wu:ScrollViewerExtensions.AlwaysScrollToEnd="True" IsInertiaEnabled="True">
                        <ItemsControl Background="Transparent" ItemsSource="{Binding UartModel.Messages, Mode=OneTime, IsAsync=True}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VirtualizingPanel.CacheLength="2"
                                                            VirtualizingPanel.CacheLengthUnit="Page"
                                                            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                            VirtualizingPanel.VirtualizationMode="Recycling" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.Resources>
                                <DataTemplate DataType="{x:Type core:MessageData}">
                                    <Border Style="{StaticResource MessageBorder}" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <WrapPanel Orientation="Horizontal">
                                            <TextBlock Margin="3"
                                                       VerticalAlignment="Center"
                                                       Style="{StaticResource MessageTextBlock}"
                                                       Text="{Binding Time, StringFormat={}{0:yyyy-MM-dd HH:mm:ss.fff}}" />
                                            <TextBlock Margin="5,0"
                                                       VerticalAlignment="Center"
                                                       Style="{StaticResource MessageTextBlock}"
                                                       Text="{Binding Type}" />
                                            <TextBox VerticalAlignment="Center"
                                                     FontSize="12"
                                                     FontWeight="Bold"
                                                     IsReadOnly="True"
                                                     Style="{StaticResource MessageTextBox}"
                                                     Text="{Binding Content}"
                                                     TextWrapping="Wrap" />
                                            <!--<TextBlock VerticalAlignment="Center"
                                                   FontSize="12"
                                                   FontWeight="Bold"
                                                   Style="{StaticResource MessageTextBlock}"
                                                   Text="{Binding Content}"
                                                   TextWrapping="Wrap" />-->
                                        </WrapPanel>
                                    </Border>
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type models:ModbusRtuMessageData}">
                                    <Border Style="{StaticResource MessageBorder}" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding DataContext.OpenAnalyzeFrameViewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding Path=PlacementTarget.Tag.CopyModbusRtuFrameCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding}"
                                                          Header="复制Modbus数据帧"
                                                          Visibility="{Binding ModbusRtuFrame, Converter={coreCvt:Null2Collapsed}}" />
                                                <MenuItem Command="{Binding Path=PlacementTarget.Tag.OpenAnalyzeFrameViewCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                          CommandParameter="{Binding}"
                                                          Header="解析数据帧"
                                                          Visibility="{Binding ModbusRtuFrame, Converter={coreCvt:Null2Collapsed}}" />
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                        <WrapPanel Orientation="Horizontal">
                                            <TextBlock Margin="3"
                                                       VerticalAlignment="Center"
                                                       Style="{StaticResource MessageTextBlock}"
                                                       Text="{Binding Time, StringFormat={}{0:yyyy-MM-dd HH:mm:ss.fff}}" />
                                            <TextBlock Margin="5,0"
                                                       VerticalAlignment="Center"
                                                       Style="{StaticResource MessageTextBlock}"
                                                       Text="{Binding Type}" />
                                            <!--<TextBox VerticalAlignment="Center"
                                                 FontSize="12"
                                                 FontWeight="Bold"
                                                 IsReadOnly="True"
                                                 Style="{StaticResource MessageTextBox}"
                                                 Text="{Binding Content}"
                                                 TextWrapping="Wrap" />-->

                                            <ItemsControl Background="Transparent"
                                                          ItemsSource="{Binding MessageSubContents}"
                                                          Visibility="{Binding MessageSubContents.Count, Converter={wu:Zero2Collapsed}}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel VerticalAlignment="Center" Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="3,0,3,0"
                                                                   VerticalAlignment="Center"
                                                                   FontWeight="Bold"
                                                                   Style="{StaticResource ModbusRtuMessageTextBlock}"
                                                                   Text="{Binding Content}"
                                                                   TextWrapping="Wrap" />
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>


                                            <!--<TextBlock>
                                            <TextBlock.Inlines>
                                                <ItemsControl ItemsSource="{Binding Runs}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Run Foreground="{Binding ForegroundColor}" Text="{Binding Text}" />
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </TextBlock.Inlines>
                                        </TextBlock>-->

                                        </WrapPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.Resources>
                        </ItemsControl>
                    </hc:ScrollViewer>
                </ContentControl>
            </DockPanel>
        </md:DrawerHost>
    </md:DialogHost>
</UserControl>
